<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Church Community Builder Single Sign-On Demo</title>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="description" content="">
		<meta name="author" content="">
		<meta http-equiv="Cache-control" content="no-store">
		<meta http-equiv="Cache-control" content="no-cache">

		<link href="_bootstrap/css/bootstrap.css" rel="stylesheet">
		<style type="text/css">
			body {
				padding-top: 40px;
				padding-bottom: 40px;
				background-color: #eaeaea;
			}
			.templates, .cross-domain-content, .iframe-type-wrapper {
				display: none;
			}
			#add-form {
				margin-bottom: 8px;
			}
			#main-form input[type="radio"] + label, #main-form input[type="checkbox"] + label {
				display: inline;
			}
			#main-form input[type="radio"], #main-form input[type="checkbox"] {
				margin: 0 10px 0 0;
			}
			#main-form h1 {
				font-size: 150%;
			}
			#main-form h2 {
				font-size: 110%;
			}
			#main-form .pull-right {
				float: none;
			}
			#main-form textarea {
				width: 300px;
			}
		</style>

		<!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
		<!--[if lt IE 9]>
		<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
		<![endif]-->

	</head>

	<body>

		<div class="container">
			<div class="row message">
			</div>
			<div class="row">
				<div class="span5 well">
					<form class="form-signin" autocomplete="off">
						<h2 class="form-signin-heading">Please sign in</h2>
						<input id="username" type="text" name="username" class="input-block-level" placeholder="Username">
						<input id="password" type="password" name="password" class="input-block-level" placeholder="Password">
						<label for="domain">https://<input id="domain" type="text" name="domain" class="input-small" placeholder="subdomain">.ccbchurch.com</label>
						<input id="add-form" type="checkbox" name="add_form" value="1" /> Also, display a logged-in form with the form_id of <input type="text" name="form-id" value="" id="form-id" class="input-small" placeholder="Form ID">
						<div class="iframe-type-wrapper">
							<label for="traditional-iframe" class="radio"><input type="radio" class="iframe-type" name="iframe_type" value="traditional" id="traditional-iframe" checked="checked"> Render the CCB form using a traditional iframe </label>
							<label for="hidden-iframe" class="radio"><input type="radio" class="iframe-type" name="iframe_type" value="hidden" id="hidden-iframe"> Render a copy of the CCB form locally and use a hidden iframe to simulate an AJAX call </label>
						</div>
						<button class="btn btn-primary" type="submit">Sign in</button>
					</form>
				</div>
				<div class="span6 well">
					<p class="lead">How this demo works</p>
					<dl class="dl-horizontal">
						<dt>Initial Request</dt>
						<dd>When users submit their CCB credentials here, they'll be sending them <em>to your server</em> via an <a href="http://api.jquery.com/jQuery.post/" target="_blank" >AJAX POST</a> to <code>single_sign_on.php</code>.</dd>
						<dt>Call CCB API</dt>
						<dd>In <code>single_sign_on.php</code> we'll make a <a href="http://php.net/manual/en/book.curl.php" target="_blank">curl</a> request to the CCB API. We'll call <code>individual_profile_from_login_password</code> in an attempt to retrieve a valid profile using the credentials sent in the first step.</dd>
						<dt>Process Response</dt>
						<dd>If the authentication is valid, we'll get a full profile. We can use this data in our own app, and we can even call other additional services related to the user (now that we know who they are). We can also handle failed login attempts at this point. In this example, we'll simply issue a JSON response with a success or failure.</dd>
						<dt>Create CCB Session</dt>
						<dd>Now that we know the credentials are valid, we need a way to establish a valid CCB solution session <em>without</em> redirecting the user. Since we are restricted by <a href="https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS" target="_blank" >cross-site HTTP requests</a>, we'll use JavaScript, jQuery, and a hidden iframe to perform a cross-site login to the CCB solution login page.</dd>
						<dt>Finished</dt>
						<dd>You should now have a valid CCB solution session (and have never left this page). At this point a callback function <code>afterLogin</code> has been called. We can go even further now with logged-in forms.</dd>
						<dt>Logged-in Form</dt>
						<dd>If you checked &quot;Also display a logged-in form&quot; and entered a valid form id from your solution, we'll render a form.</dd>
						<dt>Traditional iframe</dt>
						<dd>If you selected Traditional iframe, we very simply append an iframe to the form. You should see that the content shows you're logged-in.</dd>
						<dt>Copy Form Locally</dt>
						<dd>This might be confusing, but simply put, we're just rendering a real copy of the CCB form on this page. (I happen to render the form dynamically based on a valid form id from the login form). But you can certainly hard code your own form that matches the form elements in your CCB form if you wish. This option allows you to skin / layout your form to your liking on your site (whereas traditional iframe contents cannot be altered). Now we simply use the same hidden iframe trick (from the login form) to submit a CCB form. Because your browser has a valid session, it should be automatically matched.</dd>
					</dl>
				</div>
			</div>
			<div class="row cross-domain-content"></div>
			<div class="row form-content"></div>

		</div> <!-- /container -->

		<div class="templates">
			<div class="alert alert-error">
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				<strong>Warning!</strong> You have entered an invalid username and password.
			</div>
			<div class="alert success">
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				<strong>Success!</strong> You have successfully called the API, retrieved a profile, and used an iframe to create a valid session on your
				CCB solution! You can test your session by attempting to visit your solution's index page
			</div>
			<div class="example-form">
			</div>
		</div> <!-- /templates -->

		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
		<script src="_bootstrap/js/bootstrap.js"></script>
		<script src="single_sign_on.js"></script>

	</body>
</html>
